
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe7,\xfc\x7fw\xc6O\x1d&\xc3Q\xd5\x13\xd7\x88&'
    
_lr_action_items = {'OROR':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,12,12,-6,12,-7,-23,-24,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,]),'NUMBER':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'TRUE':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,21,21,-6,21,-7,21,21,21,-17,21,-15,21,21,-13,21,-14,-16,-10,]),'DIVIDE':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,14,14,-6,14,-7,14,14,14,-17,14,-15,14,14,14,14,14,-16,-10,]),'LE':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,13,13,-6,13,-7,13,13,-19,-17,-21,-15,-20,-22,-13,13,-14,-16,-10,]),'RPAREN':([1,2,3,4,6,9,10,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,],[-2,-4,-3,-1,-5,-12,27,-6,-11,40,-9,-7,-23,-24,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,-8,]),'LT':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,17,17,-6,17,-7,17,17,-19,-17,-21,-15,-20,-22,-13,17,-14,-16,-10,]),'PLUS':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,19,19,-6,19,-7,19,19,19,-17,19,-15,19,19,-13,19,-14,-16,-10,]),'COMMA':([1,2,3,4,6,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,-6,41,-7,-23,-24,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,]),'EQUALEQUAL':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,20,20,-6,20,-7,20,20,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,]),'IDENTIFIER':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'$end':([1,2,3,4,6,7,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,0,-6,-7,-23,-24,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,]),'GT':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,18,18,-6,18,-7,18,18,-19,-17,-21,-15,-20,-22,-13,18,-14,-16,-10,]),'STRING':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TIMES':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,16,16,-6,16,-7,16,16,16,-17,16,-15,16,16,16,16,16,-16,-10,]),'GE':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,15,15,-6,15,-7,15,15,-19,-17,-21,-15,-20,-22,-13,15,-14,-16,-10,]),'LPAREN':([0,4,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[5,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ANDAND':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,11,11,-6,11,-7,-23,11,-19,-17,-21,-15,-20,-22,-13,-18,-14,-16,-10,]),'FALSE':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NOT':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'MOD':([1,2,3,4,6,7,10,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-2,-4,-3,-1,-5,22,22,-6,22,-7,22,22,22,-17,22,-15,22,22,22,22,22,-16,-10,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'args':([9,41,],[24,42,]),'exp':([0,5,8,9,11,12,13,14,15,16,17,18,19,20,21,22,41,],[7,10,23,26,28,29,30,31,32,33,34,35,36,37,38,39,26,]),'optargs':([9,],[25,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','jvpars2.py',114),
  ('exp -> NUMBER','exp',1,'p_exp_number','jvpars2.py',118),
  ('exp -> STRING','exp',1,'p_exp_string','jvpars2.py',122),
  ('exp -> TRUE','exp',1,'p_exp_true','jvpars2.py',126),
  ('exp -> FALSE','exp',1,'p_exp_false','jvpars2.py',130),
  ('exp -> NOT exp','exp',2,'p_exp_not','jvpars2.py',134),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parens','jvpars2.py',138),
  ('args -> exp COMMA args','args',3,'p_args','jvpars2.py',142),
  ('args -> exp','args',1,'p_args_one','jvpars2.py',146),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','jvpars2.py',150),
  ('optargs -> args','optargs',1,'p_optargs','jvpars2.py',154),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','jvpars2.py',158),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','jvpars2.py',166),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','jvpars2.py',167),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','jvpars2.py',168),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','jvpars2.py',169),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','jvpars2.py',170),
  ('exp -> exp EQUALEQUAL exp','exp',3,'p_exp_binop','jvpars2.py',171),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','jvpars2.py',172),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','jvpars2.py',173),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','jvpars2.py',174),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','jvpars2.py',175),
  ('exp -> exp ANDAND exp','exp',3,'p_exp_binop','jvpars2.py',176),
  ('exp -> exp OROR exp','exp',3,'p_exp_binop','jvpars2.py',177),
]
